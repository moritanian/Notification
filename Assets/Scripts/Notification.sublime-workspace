{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Todo",
				"TodoField"
			],
			[
				"_",
				"_todoText"
			],
			[
				"TO",
				"TODOFIELD_DIST"
			],
			[
				"TODO",
				"TODOFIELD_INIT_POS_Y"
			],
			[
				"To",
				"TodoField"
			],
			[
				"T",
				"TodoTime"
			],
			[
				"M",
				"MaxId"
			],
			[
				"N",
				"NotificationTime"
			],
			[
				"Todo_",
				"Todo_ModifiedTime_id"
			],
			[
				"C",
				"CreateTime"
			],
			[
				"Dta",
				"DataKeys"
			],
			[
				"No",
				"notification_time"
			],
			[
				"TODOFIELD_",
				"TODOFIELD_POS_X"
			],
			[
				"Text",
				"TextSave"
			],
			[
				"D",
				"Day	int { get; }"
			],
			[
				"string",
				"string	string"
			],
			[
				"Sol",
				"SoldierTypes	List"
			],
			[
				"Add",
				"ADInterstitialAd	ADInterstitialAd"
			],
			[
				"Has",
				"Hashtable()	Hashtable()"
			],
			[
				"hash",
				"Hashtable	Hashtable"
			],
			[
				"_ctry",
				"_ctrySoldiers	Hashtable"
			],
			[
				"ha",
				"Hashtable	Hashtable"
			],
			[
				"Soil",
				"Soldiers	Hashtable"
			],
			[
				"Hash",
				"Hashtable	Hashtable"
			],
			[
				"Create",
				"CreateTdMap	CreateTdMap"
			],
			[
				"Mu",
				"MusicSource	MusicSource"
			],
			[
				"s",
				"sealed	sealed"
			],
			[
				"i",
				"int	int"
			],
			[
				"a",
				"AlloySpr	AlloySpr"
			],
			[
				"u",
				"UnityEngine"
			],
			[
				"S",
				"musicSource"
			],
			[
				"Vo",
				"SetVolume"
			],
			[
				"Set",
				"SetSESlider"
			],
			[
				"val",
				"val"
			],
			[
				"Se",
				"Settings"
			]
		]
	},
	"buffers":
	[
		{
			"file": "TodoField.cs",
			"settings":
			{
				"buffer_size": 1812,
				"line_ending": "Unix"
			}
		},
		{
			"file": "TodoData.cs",
			"settings":
			{
				"buffer_size": 2276,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Main.cs",
			"settings":
			{
				"buffer_size": 1609,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Setting.cs",
			"settings":
			{
				"buffer_size": 760,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Utility/FileIo.cs",
			"settings":
			{
				"buffer_size": 1261,
				"line_ending": "Unix"
			}
		},
		{
			"file": "TodoText.cs",
			"settings":
			{
				"buffer_size": 1021,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Utility/PanelSlider.cs",
			"settings":
			{
				"buffer_size": 1272,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Utility/Token.cs",
			"settings":
			{
				"buffer_size": 10219,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "using UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// Token管理クラス\npublic class TokenMgr<Type> where Type : Token {\n	int _size = 0;\n	GameObject _prefab = null;\n	List<Type> _pool = null;\n	/// Order in Layer\n	int _order = 0;\n  /// ForEach関数に渡す関数の型\n  public delegate void FuncT(Type t);\n	/// コンストラクタ\n	/// プレハブは必ず\"Resources/Prefabs/\"に配置すること\n	public TokenMgr(string prefabName, int size=0) {\n		_size = size;\n		_prefab = Resources.Load(\"Prefabs/\"+prefabName) as GameObject;\n    if(_prefab == null) {\n      Debug.LogError(\"Not found prefab. name=\"+prefabName);\n    }\n		_pool = new List<Type>();\n\n		if(size > 0) {\n			// サイズ指定があれば固定アロケーションとする\n			for(int i = 0; i < size; i++) {\n				GameObject g = GameObject.Instantiate(_prefab, new Vector3(), Quaternion.identity) as GameObject;\n				Type obj = g.GetComponent<Type>();\n        obj.VanishCannotOverride();\n				_pool.Add(obj);\n			}\n		}\n	}\n	/// オブジェクトを再利用する\n	Type _Recycle(Type obj, float x, float y, float direction, float speed) {\n		// 復活\n		obj.Revive();\n		obj.SetPosition(x, y);\n    if(obj.RigidBody != null) {\n      // Rigidbody2Dがあるときのみ速度を設定する\n      obj.SetVelocity(direction, speed);\n    }\n		obj.Angle = 0;\n		// Order in Layerをインクリメントして設定する\n		obj.SortingOrder = _order;\n		_order++;\n		return obj;\n	}\n\n	/// インスタンスを取得する\n	public Type Add(float x, float y, float direction=0.0f, float speed=0.0f) {\n		foreach(Type obj in _pool) {\n			if(obj.Exists == false) {\n				// 未使用のオブジェクトを見つけた\n				return _Recycle(obj, x, y, direction, speed);\n			}\n		}\n\n		if(_size == 0) {\n			// 自動で拡張\n			GameObject g = GameObject.Instantiate(_prefab, new Vector3(), Quaternion.identity) as GameObject;\n			Type obj = g.GetComponent<Type>();\n			_pool.Add(obj);\n			return _Recycle(obj, x, y, direction, speed);\n		}\n		return null;\n	}\n\n  /// 生存するインスタンスに対してラムダ式を実行する\n  public void ForEachExists(FuncT func) {\n    foreach(var obj in _pool) {\n      if(obj.Exists) {\n        func(obj);\n      }\n    }\n  }\n\n  /// 生存しているインスタンスをすべて破棄する\n  public void Vanish() {\n    ForEachExists(t => t.Vanish());\n  }\n  \n  /// インスタンスの生存数を取得する\n  public int Count() {\n    int ret = 0;\n    ForEachExists(t => ret++);\n\n    return ret;\n  }\n\n  /// 指定のTokenに一番近いインスタンスを返す\n  /// ※見つからなかった場合は null\n  public Type Nearest(Token t1) {\n    Type ret = null;\n    float distance = float.MaxValue;\n    ForEachExists(t2 => {\n      var d = Util.DistanceBetween(t1, t2);\n      if(d < distance) {\n        distance = d;\n        ret = t2;\n      }\n    });\n    return ret;\n  }\n}\n",
			"file": "Utility/TokenMgr.cs",
			"file_size": 2896,
			"file_write_time": 131041760670780386,
			"settings":
			{
				"buffer_size": 2463,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 384.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"42 : Add a header"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"mono",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Utility"
	],
	"file_history":
	[
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Utility/MyCanvas.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Utility/Util.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Dialog.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Body.cs",
		"/C/Users/moritania/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Utility/Token.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/ScrollController.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/AppData/TodoText_id1.txt",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Setting.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/TodoText.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Utility/PanelSlider.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Main.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/TimeController.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Notification.sln",
		"/C/Users/moritania/Desktop/wavserver/unity/Notification/Assets/Scripts/Notification.sublime-project",
		"/C/Users/moritania/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/moritania/AppData/Roaming/Sublime Text 3/Packages/User/OmniSharpSublime.sublime-settings",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Alloy.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Settings.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/UserData.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/WarField/Soldier.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/WarField/WarField.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/EnemyParam.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/Enemy.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/AlloyDat.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/AlloySpr.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/WarField/Hoplite.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/WarField/BranchData.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/WarField/Infantry.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/TokenMgr.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/MyCanvas.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/UserDataDispForMap.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/GameMgr.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/MatDisp.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Mat2.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/Field.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/MapScene.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/WarField/BattleStart.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/Particle.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/Cursor.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/Tower.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/WaveStart.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/Layer2D.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/Gui.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/ImageObj.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/ButtonObj.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/TextObj.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/EnemyGenerator.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/CreateTdMap.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/CreateMap.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/MyAssetPostProcessor.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/Global.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/Shot.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/Token.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Towerdefense/TowerParam.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/SoundManager.cs",
		"/C/Users/moritania/AppData/Roaming/Sublime Text 3/Packages/User/Default.sublime-keymap",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/SettingDialog.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/StartScene/StartScene.cs",
		"/C/Users/moritania/AppData/Roaming/Sublime Text 3/Packages/User/Unity_Td.sublime-project",
		"/C/Users/moritania/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/MusicSource.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/AudioSource.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Dialog.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/CountryDialog.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/CountryDat.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/SyntaxDialog.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Tama.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/FileIO.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/CountryBtn.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/Slider.cs",
		"/C/Users/moritania/Desktop/wavserver/unity/prac_2d/Assets/Scripts/Unity/Vec2D.cs",
		"/C/Users/moritania/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"SetParent",
			"MaxId",
			"Getprefab",
			"CreateAllData",
			"Slider",
			"Branchata",
			"parent",
			"t2",
			"ラムダ式",
			"PlayerPrefs",
			"GetInt",
			"get",
			"Begin",
			"UpDate",
			"SetActive",
			"btnBuy",
			"txtCost",
			"textCost",
			"Buy",
			"BuyCost",
			"25",
			"28",
			"gameobject",
			"foreach",
			"ButtonBuy",
			"GetChipSprite",
			"GetChipSize",
			"SEvalue",
			"Awake",
			"Behaviour",
			"Behavior",
			"set",
			"ButtonObj",
			"placeable",
			"set",
			"_lCollision",
			"Dictionary",
			"List",
			"F",
			"List",
			"field",
			"Load",
			"TMXLoader"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "TodoField.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1812,
						"regions":
						{
						},
						"selection":
						[
							[
								726,
								726
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 225.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "TodoData.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2276,
						"regions":
						{
						},
						"selection":
						[
							[
								676,
								676
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 225.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Main.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1609,
						"regions":
						{
						},
						"selection":
						[
							[
								491,
								491
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Setting.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 760,
						"regions":
						{
						},
						"selection":
						[
							[
								631,
								631
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Utility/FileIo.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1261,
						"regions":
						{
						},
						"selection":
						[
							[
								947,
								947
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "TodoText.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1021,
						"regions":
						{
						},
						"selection":
						[
							[
								329,
								364
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Utility/PanelSlider.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1272,
						"regions":
						{
						},
						"selection":
						[
							[
								482,
								482
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Utility/Token.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10219,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 6795.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Utility/TokenMgr.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2463,
						"regions":
						{
						},
						"selection":
						[
							[
								2026,
								2026
							]
						],
						"settings":
						{
							"hasHeader": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 900.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.451845906902,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 94.0
	},
	"pinned_build_system": "",
	"project": "Notification.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 120.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
